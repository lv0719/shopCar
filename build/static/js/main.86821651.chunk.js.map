{"version":3,"sources":["component/img sync /^/.*_1/.jpg$","component/img/100_1.jpg","component/img/101_1.jpg","component/img/10412368723880252_1.jpg","component/img/10547961582846888_1.jpg","component/img/10686354557628304_1.jpg","component/img/11033926921508488_1.jpg","component/img/11600983276356164_1.jpg","component/img/11854078013954528_1.jpg","component/img/12064273040195392_1.jpg","component/img/18532669286405344_1.jpg","component/img/18644119330491310_1.jpg","component/img/27250082398145996_1.jpg","component/img/39876704341265610_1.jpg","component/img/51498472915966370_1.jpg","component/img/5619496040738316_1.jpg","component/img/6090484789343891_1.jpg","component/img/8552515751438644_1.jpg","component/img/876661122392077_1.jpg","component/img/9197907543445676_1.jpg","request/request.js","modal/product.js","modal/cart.js","component/shoppingCart.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","getProductData","obj","a","axios","get","params","data","TestModal","namespace","state","listData","reducers","add","effects","getListData","action","call","put","type","CartModal","carData","addCar","localStorage","setItem","JSON","stringify","newCarData","Option","Select","confirm","Modal","plainOptions","ShoppingCart","dispatch","useDispatch","useState","filter","setFilter","size","setSize","visible","setVisible","totalPrice","setTotalPrice","useSelector","store","product","cart","loading","useEffect","parse","getItem","useUpdateEffect","getTotalPrice","openOrCloseShoppingCar","value","open","arr","i","price","number","toFixed","className","Group","options","onChange","spinning","global","tip","length","style","width","item","src","require","sku","default","alt","title","availableSizes","index","onClick","cloneDeep","newListDta","flag","forEach","message","success","addShopingCar","count","offset","ShoppingCartOutlined","destroyOnClose","mask","placement","onClose","min","max","numberOnChange","icon","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","console","log","clear","app","dva","history","createHistory","use","createLoading","model","ProductModel","CartModel","router","start"],"mappings":"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","file":"static/js/main.86821651.chunk.js","sourcesContent":["var map = {\n\t\"./100_1.jpg\": 260,\n\t\"./101_1.jpg\": 261,\n\t\"./10412368723880252_1.jpg\": 262,\n\t\"./10547961582846888_1.jpg\": 263,\n\t\"./10686354557628304_1.jpg\": 264,\n\t\"./11033926921508488_1.jpg\": 265,\n\t\"./11600983276356164_1.jpg\": 266,\n\t\"./11854078013954528_1.jpg\": 267,\n\t\"./12064273040195392_1.jpg\": 268,\n\t\"./18532669286405344_1.jpg\": 269,\n\t\"./18644119330491310_1.jpg\": 270,\n\t\"./27250082398145996_1.jpg\": 271,\n\t\"./39876704341265610_1.jpg\": 272,\n\t\"./51498472915966370_1.jpg\": 273,\n\t\"./5619496040738316_1.jpg\": 274,\n\t\"./6090484789343891_1.jpg\": 275,\n\t\"./8552515751438644_1.jpg\": 276,\n\t\"./876661122392077_1.jpg\": 277,\n\t\"./9197907543445676_1.jpg\": 278\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 140;","export default __webpack_public_path__ + \"static/media/100_1.60fb4130.jpg\";","export default __webpack_public_path__ + \"static/media/101_1.d14124e0.jpg\";","export default __webpack_public_path__ + \"static/media/10412368723880252_1.13858cd3.jpg\";","export default __webpack_public_path__ + \"static/media/10547961582846888_1.ebf63603.jpg\";","export default __webpack_public_path__ + \"static/media/10686354557628304_1.9cb24054.jpg\";","export default __webpack_public_path__ + \"static/media/11033926921508488_1.96badb6f.jpg\";","export default __webpack_public_path__ + \"static/media/11600983276356164_1.be081f68.jpg\";","export default __webpack_public_path__ + \"static/media/11854078013954528_1.310ac226.jpg\";","export default __webpack_public_path__ + \"static/media/12064273040195392_1.bfdc616c.jpg\";","export default __webpack_public_path__ + \"static/media/18532669286405344_1.054e6832.jpg\";","export default __webpack_public_path__ + \"static/media/18644119330491310_1.7ec39881.jpg\";","export default __webpack_public_path__ + \"static/media/27250082398145996_1.27b63c57.jpg\";","export default __webpack_public_path__ + \"static/media/39876704341265610_1.e86f32a0.jpg\";","export default __webpack_public_path__ + \"static/media/51498472915966370_1.eeca77d9.jpg\";","export default __webpack_public_path__ + \"static/media/5619496040738316_1.0d58ff93.jpg\";","export default __webpack_public_path__ + \"static/media/6090484789343891_1.1250c07d.jpg\";","export default __webpack_public_path__ + \"static/media/8552515751438644_1.6487e09e.jpg\";","export default __webpack_public_path__ + \"static/media/876661122392077_1.5a25035a.jpg\";","export default __webpack_public_path__ + \"static/media/9197907543445676_1.c23ce225.jpg\";","import axios from \"axios\";\r\n// 获取商品列表数据\r\nconst getProductData = async (obj) => {\r\n  const {\r\n    data: { data },\r\n  } = await axios.get(\"http://120.55.193.14:3030/shoppingCat\", { params: obj });\r\n  return data;\r\n};\r\nexport { getProductData };\r\n","import { getProductData } from \"../request/request\"; // 商品列表请求函数\r\n// 商品列表model\r\nconst TestModal = {\r\n  namespace: \"product\",\r\n  state: {\r\n    listData: [], // 商品列表数组\r\n  },\r\n  reducers: {\r\n    add(state, { data }) {\r\n      return {\r\n        ...state,\r\n        listData: data,\r\n      };\r\n    },\r\n  },\r\n  effects: {\r\n    *getListData({ action }, { call, put }) {\r\n      let data = yield call(getProductData, action);\r\n      yield put({\r\n        type: \"add\",\r\n        data,\r\n      });\r\n    },\r\n  },\r\n};\r\nexport default TestModal;\r\n","// 购物车model\r\nconst CartModal = {\r\n  namespace: \"cart\",\r\n  state: {\r\n    carData: [], // 购物车数组\r\n  },\r\n  reducers: {\r\n    addCar(state, { action }) {\r\n      localStorage.setItem(\"carData\", JSON.stringify(action?.newCarData));\r\n      return {\r\n        ...state,\r\n        carData: action?.newCarData,\r\n      };\r\n    },\r\n  },\r\n  effects: {},\r\n};\r\nexport default CartModal;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useUpdateEffect } from \"ahooks\";\r\nimport { useDispatch, useSelector } from \"dva\";\r\nimport {\r\n  Checkbox,\r\n  Select,\r\n  Button,\r\n  Badge,\r\n  InputNumber,\r\n  Tooltip,\r\n  Drawer,\r\n  message,\r\n  Modal,\r\n  Spin,\r\n} from \"antd\";\r\nimport {\r\n  ShoppingCartOutlined,\r\n  ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { cloneDeep } from \"loadsh\";\r\nimport \"./style/index.css\";\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n// 型号数组\r\nconst plainOptions = [\"XS\", \"S\", \"M\", \"ML\", \"L\", \"XL\", \"XXL\"];\r\n// 购物车组件\r\nconst ShoppingCart = () => {\r\n  const dispatch = useDispatch();\r\n  const [filter, setFilter] = useState(\"normal\"); // 价格筛选\r\n  const [size, setSize] = useState(plainOptions); // 筛选的型号\r\n  const [visible, setVisible] = useState(false); // 购物车是否弹出\r\n  const [totalPrice, setTotalPrice] = useState(0); // 购物车商品总价格\r\n  // 拿到商品列表数组和购物车数组\r\n  const { product, cart, loading } = useSelector((store) => {\r\n    return store;\r\n  });\r\n  const { listData = [] } = product;\r\n  const { carData = [] } = cart;\r\n  useEffect(() => {\r\n    // 判断是否有购物车数据缓存，如果有，使用购物车缓存\r\n    let carData = JSON.parse(localStorage.getItem(\"carData\"));\r\n    if (carData) {\r\n      dispatch({ type: \"cart/addCar\", action: { newCarData: carData } });\r\n    }\r\n    // 获得商品列表数据\r\n    dispatch({ type: \"product/getListData\", action: { size, filter } });\r\n  }, []);\r\n  // 购物车书变化时，计算商品总价格\r\n  useUpdateEffect(() => {\r\n    getTotalPrice(carData);\r\n  }, [carData]);\r\n  // 筛选条件改变时，重新请求商品list数据\r\n  useUpdateEffect(() => {\r\n    dispatch({ type: \"product/getListData\", action: { size, filter } });\r\n  }, [size, filter]);\r\n  // 商品数量改变 onchange\r\n  const numberOnChange = (value, id) => {\r\n    let newCarData = cloneDeep(carData);\r\n    newCarData.forEach((item) => {\r\n      if (item.id === id) {\r\n        item.number = value;\r\n      }\r\n    });\r\n    dispatch({ type: \"cart/addCar\", action: { newCarData } });\r\n  };\r\n  // 删除购物车中的商品\r\n  const delProducts = (id) => {\r\n    confirm({\r\n      title: \"你确定要删除此件商品嘛？\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"小主要不再考虑一下吧\",\r\n      okText: \"删除\",\r\n      okType: \"danger\",\r\n      cancelText: \"取消\",\r\n      onOk() {\r\n        let newCarData = cloneDeep(carData);\r\n        newCarData = newCarData.filter((item) => item.id !== id);\r\n        dispatch({ type: \"cart/addCar\", action: { newCarData } });\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n  // 打开或关闭购物车\r\n  const openOrCloseShoppingCar = (value, open) => {\r\n    if (open) {\r\n      // 打开购物车是计算购物车中商品的价格\r\n      getTotalPrice(carData);\r\n    }\r\n    setVisible(value);\r\n  };\r\n  //清空购物车\r\n  const clearCar = () => {\r\n    console.log(1);\r\n    let newCarData = cloneDeep(carData);\r\n    newCarData = [];\r\n    dispatch({ type: \"cart/addCar\", action: { newCarData } });\r\n  };\r\n  // 加入购物车\r\n  const addShopingCar = (id) => {\r\n    // 深拷贝商品列表和购物车数据\r\n    let newCarData = cloneDeep(carData);\r\n    let newListDta = cloneDeep(listData);\r\n    // 判断商品在购物车中是否存在，如果存在数量加1\r\n    let flag = true;\r\n    newCarData.forEach((item) => {\r\n      if (item.id === id) {\r\n        item.number += 1;\r\n        flag = false;\r\n      }\r\n    });\r\n    if (flag) {\r\n      let arr = newListDta.filter((item) => {\r\n        return item?.id === id;\r\n      });\r\n      newCarData = [...newCarData, ...arr];\r\n    }\r\n    dispatch({ type: \"cart/addCar\", action: { newCarData } });\r\n    message.success(\"加入购物车成功\");\r\n  };\r\n  // 计算购物车商品总价格\r\n  const getTotalPrice = (arr) => {\r\n    let totalPrice = 0;\r\n    for (var i in arr) {\r\n      totalPrice = totalPrice + arr[i].price * arr[i].number;\r\n    }\r\n    setTotalPrice(totalPrice.toFixed(2));\r\n  };\r\n  // 结算\r\n  const settlement = () => {\r\n    confirm({\r\n      title: \"你确定要结算购物车中的商品嘛？\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: `合计价格${totalPrice}`,\r\n      okText: \"确定结算\",\r\n      cancelText: \"取消\",\r\n      onOk() {\r\n        localStorage.clear(\"carData\");\r\n        dispatch({ type: \"cart/addCar\", action: { newCarData: [] } });\r\n        setVisible(false);\r\n        message.success(\"购买成功，商品正在路上\");\r\n      },\r\n      onCancel() {},\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"box\">\r\n      {/* 购物车左边型号筛选部分 */}\r\n      <div className=\"left\">\r\n        <Checkbox.Group\r\n          options={plainOptions}\r\n          value={size}\r\n          onChange={(value) => setSize(value)}\r\n        />\r\n      </div>\r\n      {/* 购物车中间商品列表展示部分 */}\r\n      <Spin spinning={loading?.global} tip=\"加载中，请稍等\">\r\n        <div className=\"center\">\r\n          <div className=\"filter-header\">\r\n            <div className=\"filter-header-title\">\r\n              <span className=\"product-number\">{listData?.length}</span>{\" \"}\r\n              件商品被找到\r\n            </div>\r\n            <div className=\"selects\">\r\n              <span>价格排序：</span>\r\n              <Select\r\n                value={filter}\r\n                style={{ width: 120 }}\r\n                onChange={(value) => {\r\n                  setFilter(value);\r\n                }}\r\n              >\r\n                <Option value=\"normal\">normal</Option>\r\n                <Option value=\"lower\">lowestprice</Option>\r\n                <Option value=\"high\">highestprice</Option>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"goodsList\">\r\n            {/* 渲染商品列表 */}\r\n            {listData.map((item) => {\r\n              return (\r\n                <div className=\"goods-item\" key={item?.id}>\r\n                  <div>\r\n                    <img\r\n                      className=\"goods-list-img\"\r\n                      src={require(`./img/${item?.sku}_1.jpg`).default}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"goods-list-tite\">\r\n                    <Tooltip title=\"标题\">{item?.title}</Tooltip>\r\n                  </div>\r\n                  <div className=\"good-list-desc\">\r\n                    型号：\r\n                    {item?.availableSizes.map((item, index, arr) => {\r\n                      let length = arr.length;\r\n                      if (length === 1 || index + 1 === length) {\r\n                        return <span key={index}>{item}</span>;\r\n                      }\r\n                      return <span key={index}>{item}，</span>;\r\n                    })}\r\n                  </div>\r\n                  <div className=\"good-list-price\">价格：${item?.price}</div>\r\n                  <div>\r\n                    <Button\r\n                      type=\"default\"\r\n                      onClick={() => {\r\n                        addShopingCar(item?.id);\r\n                      }}\r\n                    >\r\n                      加入购物车\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Spin>\r\n      {/* 购物车 */}\r\n      <div className=\"right\">\r\n        <div>\r\n          <Badge count={carData?.length} size=\"small\" offset={[-301, 15]}>\r\n            <div\r\n              className=\"carts\"\r\n              onClick={() => {\r\n                openOrCloseShoppingCar(true, \"open\");\r\n              }}\r\n            >\r\n              <ShoppingCartOutlined />\r\n              购物车\r\n            </div>\r\n          </Badge>\r\n          <Drawer\r\n            destroyOnClose={true}\r\n            width={530}\r\n            mask={false}\r\n            title=\"Cart\"\r\n            placement=\"right\"\r\n            onClose={() => {\r\n              openOrCloseShoppingCar(false);\r\n            }}\r\n            visible={visible}\r\n          >\r\n            <div className=\"shop-cart-item-box test-5\">\r\n              {carData.map((item) => {\r\n                return (\r\n                  <div className=\"shop-cart-item\" key={item?.id}>\r\n                    <div>\r\n                      <img\r\n                        className=\"cart-img\"\r\n                        src={require(`./img/${item.sku}_1.jpg`).default}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"goods-tite\">\r\n                        <Tooltip title=\"标题\">{item?.title}</Tooltip>\r\n                      </div>\r\n                      <div className=\"goods-sizes\">\r\n                        型号：\r\n                        {item?.availableSizes.map((item, index, arr) => {\r\n                          let length = arr.length;\r\n                          if (length === 1 || index + 1 === length) {\r\n                            return <span key={index}>{item}</span>;\r\n                          }\r\n                          return <span key={index}>{item},</span>;\r\n                        })}\r\n                      </div>\r\n                      <div className=\"goods-privce\">\r\n                        <span className=\"privace\">价格：${item?.price}</span>\r\n                      </div>\r\n                      数量：\r\n                      <InputNumber\r\n                        style={{ width: 80 }}\r\n                        size=\"small\"\r\n                        min={1}\r\n                        max={10}\r\n                        value={item?.number}\r\n                        onChange={(value) => {\r\n                          numberOnChange(value, item?.id);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"del-button\">\r\n                      <Button\r\n                        type=\"default\"\r\n                        onClick={() => {\r\n                          delProducts(item?.id);\r\n                        }}\r\n                      >\r\n                        删除\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div className=\"clearCarBtn\">\r\n                <Badge count={carData?.length} size=\"small\" offset={[-301, 15]}>\r\n                  <div className=\"carts\">\r\n                    <ShoppingCartOutlined />\r\n                    购物车\r\n                  </div>\r\n                </Badge>\r\n                <Button\r\n                  type=\"default\"\r\n                  onClick={() => {\r\n                    clearCar();\r\n                  }}\r\n                >\r\n                  清空购物车\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"total\">\r\n              <div> 合计：${totalPrice}</div>\r\n              <div>\r\n                <Button\r\n                  type=\"default\"\r\n                  onClick={() => {\r\n                    settlement();\r\n                  }}\r\n                >\r\n                  结算\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ShoppingCart;\r\n","import dva from \"dva\";\r\nimport createLoading from \"dva-loading\"; // 引入dvaloading\r\nimport ProductModel from \"./modal/product\";\r\nimport CartModel from \"./modal/cart\";\r\nimport createHistory from \"history/createHashHistory\";\r\nimport ShoppingCart from \"./component/shoppingCart\";\r\nimport \"./app.css\";\r\n// dva配置 启动项目\r\nconst app = dva({\r\n  history: createHistory(),\r\n});\r\napp.use(createLoading());\r\napp.model(ProductModel);\r\napp.model(CartModel);\r\napp.router(() => <ShoppingCart />);\r\napp.start(\"#root\");\r\n"],"sourceRoot":""}